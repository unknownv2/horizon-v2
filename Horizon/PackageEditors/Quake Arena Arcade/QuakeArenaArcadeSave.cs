using System;

namespace Horizon.PackageEditors.Quake_Arena_Arcade
{
    class QuakeArenaArcadeSave
    {
        internal static byte[] Encrypt(byte[] data)
        {
            //Create our result
            byte[] result = new byte[data.Length];
            //Create our key
            byte[] key = new byte[0x20];

            //Loop for our data length
            for (int i = 0; i < data.Length; i += 0x20)
            {
                //Generate a new key
                key = GenerateKey(key);

                for (int x = 0; x < 0x20; x++)
                {
                    //Set our index
                    int index = i + x;
                    //Set our data
                    result[index] = (byte)((int)data[index] ^ (int)key[x]);
                }
                //Set our key data as our previously encrypted data
                Array.Copy(result, i, key, 0, 0x20);
            }
            //Return our data
            return result;
        }

        internal static byte[] Decrypt(byte[] data)
        {
            //Create our result
            byte[] result = new byte[data.Length];
            //Create our key
            byte[] key = new byte[0x20];

            //Loop for our data length
            for (int i = 0; i < data.Length; i += 0x20)
            {
                //Generate a new key
                key = GenerateKey(key);

                for (int x = 0; x < 0x20; x++)
                {
                    //Set our index
                    int index = i + x;
                    //Set our data
                    result[index] = (byte)((int)data[index] ^ (int)key[x]);
                }
                //Set our key data as our previously encrypted data
                Array.Copy(data, i, key, 0, 0x20);
            }
            //Return our data
            return result;
        }
        private static byte[] GenerateKey(byte[] data)
        {
            #region Loop 1
            //Create our byte array for our temp result
            byte[] tempResultData = new byte[data.Length];

            //Loop for the length of our data
            for (int i = 0; i < tempResultData.Length; i += 4)
            {
                //Write our xor'd result
                tempResultData.WriteInt32(i,((int)(data.ReadInt32(i) ^ DATA6.ReadInt32(i + 4))));
            }

            #endregion
            #region Loop 2

            //this usually is 0x0E
            int r3 = 0x00;
            int r4 = 0x00;
            int r5 = 0x00;
            int r6 = 0x0E;
            int r7 = 0x00;
            int r8 = 0x00;
            int r9 = 0x00;
            int r10 = 0x00;
            int r11 = 0x00;
            int r16 = 0x00;
            int r17 = 0x00;
            int r18 = 0x00;
            int r20 = 0x00;
            int r21 = 0x04;
            int r22 = 0x01;
            int r23 = 0x03;
            int r24 = 0x01;
            int r25 = 0x00;
            int r26 = 0x00;
            int r27 = 0x00;
            int r28 = 0x00;
            int r29 = 0x00;
            int r31 = 0x08;
            int CTR = 0x00;
            if (r6 > 1)
            {
                r20 = 0x20;
                r29 = 0x0A; // 0x8218daa8
                r24 = 0x01;
                do
                {
                    byte[] nextData = new byte[tempResultData.Length];
                    Array.Copy(tempResultData, nextData, tempResultData.Length);
                    r9 = 0x00;
                    if (r31 > 0) // loc_8218DAD0
                    {
                        r11 = r24;
                        CTR = r31;
                        r8 = r23 - r24;
                        r7 = r21 - r24;
                        int pos = 0x00;
                        do
                        {
                            r5 = nextData.ReadInt8(pos);
                            r6 = r8 + r11;
                            r4 = r7 + r11;
                            r3 = r6 / r31;
                            r18 = r4 / r31;
                            r3 *= r31;
                            r6 -= r3;
                            r3 = r31 * r18;
                            r6 <<= 2;
                            r18 = 0x00;
                            r17 = r11 / r31;
                            r4 -= r3;
                            r3 = r17 * r31;
                            r6 = tempResultData.ReadInt32(r6);
                            r3 = r11 - r3;
                            r4 <<= 2;
                            r18 = 0x00;
                            r3 <<= 2;
                            r17 = 0x00;
                            r6 >>= 8;
                            r16 = r29 + r9;
                            r4 = tempResultData.ReadInt32(r4);
                            r6 = (r6 & 0xFF) << 2;
                            r18 = r16 << 2;
                            r3 = tempResultData.ReadInt16(r3);
                            r4 = (r4 & 0xFF) << 2;
                            r5 = (r5 << 2) | (r5 >> (16 - 2));
                            r3 = (r3 & 0xFF) << 2;
                            r6 = TABLE1.ReadInt32(r6);
                            r9 += 1;
                            r18 = DATA6.ReadInt32(r18 - 4);
                            r11 += 1;
                            r4 = TABLE2.ReadInt32(r4);
                            r5 = TABLE3.ReadInt32(r5);
                            r3 = TABLE4.ReadInt32(r3);
                            r6 ^= r4;
                            r4 = r6 ^ r3;
                            r3 = r4 ^ r18;
                            r6 = r3 ^ r5;
                            //store r6
                            nextData.WriteInt32(pos, r6);
                            pos += 4;
                            CTR--;
                        } while (CTR != 0);
                        r5 = r20;
                        Array.Copy(nextData, tempResultData, nextData.Length);
                        r6 = 0x0E;
                        r22 += 1;
                        r29 += 8;

                    }
                } while (r22 < r6);
            }
            #endregion
            #region Last Loop
            byte[] finalResult = new byte[tempResultData.Length];
            r8 = 0;
            if (r31 > 0)
            {
                CTR = r31;
                r10 = r23;
                r4 = r24 - r23;
                r3 = r21 - r23;
                r11 = 0x00;
                do
                {
                    r5 = (r6 << 3);
                    r6 = tempResultData.ReadInt8((r31 - CTR) * 4);

                    //r29 = table1Data offset
                    r5 += r8;
                    r28 = r4 + r10;
                    r5 <<= 2;
                    r26 = r28 / r31;
                    //r6 = load byte from loop3Data1 at offset r6
                    r6 = DATA5.ReadInt8(r6);
                    r25 = r10 / r31;
                    r5 = DATA6.ReadInt32(r5 + 4);
                    r29 = r26 * r31;
                    r26 = (r5 >> 0x18);
                    r29 = r28 - r29;
                    r6 ^= r26;
                    r29 <<= 2;
                    finalResult[r11++] = (byte)(r6 & 0xFF);
                    r28 = r25 * r31;
                    r28 = r10 - r28;
                    r6 = (r5 >> 16);
                    r28 <<= 2;
                    r25 = r3 + r10;
                    r8 += 1;
                    r23 = r25 / r31;
                    r10 += 1;
                    r23 *= r31;
                    r29 = tempResultData.ReadInt16(r29) & 0xFF;
                    r27 = r25 - r23;
                    r27 <<= 2;
                    r29 = DATA5.ReadInt8(r29);
                    r6 ^= r29;
                    finalResult[r11++] = (byte)(r6 & 0xFF);
                    r6 = tempResultData.ReadInt32(r28);
                    r6 = (r6 >> 8) & (0xFF);
                    r29 = r5 >> 8;
                    r6 = DATA5.ReadInt8(r6);
                    r6 ^= r29;
                    finalResult[r11++] = (byte)(r6 & 0xFF);
                    r6 = tempResultData.ReadInt32(r27);
                    r6 = r6 & 0xFF;
                    r6 = DATA5.ReadInt8(r6);
                    r5 ^= r6;
                    finalResult[r11++] = (byte)(r5 & 0xFF);
                    r6 = 0x0E;
                    CTR--;
                } while (CTR != 0);
            }

            #endregion
            //Return our result
            return finalResult;
        }
        internal static byte[] TABLE1 = {
            0x63, 0xA5, 0xC6, 0x63, 0x7C, 0x84, 0xF8, 0x7C, 0x77, 0x99, 0xEE, 0x77, 0x7B, 0x8D, 0xF6, 0x7B, 
            0xF2, 0x0D, 0xFF, 0xF2, 0x6B, 0xBD, 0xD6, 0x6B, 0x6F, 0xB1, 0xDE, 0x6F, 0xC5, 0x54, 0x91, 0xC5, 
            0x30, 0x50, 0x60, 0x30, 0x01, 0x03, 0x02, 0x01, 0x67, 0xA9, 0xCE, 0x67, 0x2B, 0x7D, 0x56, 0x2B, 
            0xFE, 0x19, 0xE7, 0xFE, 0xD7, 0x62, 0xB5, 0xD7, 0xAB, 0xE6, 0x4D, 0xAB, 0x76, 0x9A, 0xEC, 0x76, 
            0xCA, 0x45, 0x8F, 0xCA, 0x82, 0x9D, 0x1F, 0x82, 0xC9, 0x40, 0x89, 0xC9, 0x7D, 0x87, 0xFA, 0x7D, 
            0xFA, 0x15, 0xEF, 0xFA, 0x59, 0xEB, 0xB2, 0x59, 0x47, 0xC9, 0x8E, 0x47, 0xF0, 0x0B, 0xFB, 0xF0, 
            0xAD, 0xEC, 0x41, 0xAD, 0xD4, 0x67, 0xB3, 0xD4, 0xA2, 0xFD, 0x5F, 0xA2, 0xAF, 0xEA, 0x45, 0xAF, 
            0x9C, 0xBF, 0x23, 0x9C, 0xA4, 0xF7, 0x53, 0xA4, 0x72, 0x96, 0xE4, 0x72, 0xC0, 0x5B, 0x9B, 0xC0, 
            0xB7, 0xC2, 0x75, 0xB7, 0xFD, 0x1C, 0xE1, 0xFD, 0x93, 0xAE, 0x3D, 0x93, 0x26, 0x6A, 0x4C, 0x26, 
            0x36, 0x5A, 0x6C, 0x36, 0x3F, 0x41, 0x7E, 0x3F, 0xF7, 0x02, 0xF5, 0xF7, 0xCC, 0x4F, 0x83, 0xCC, 
            0x34, 0x5C, 0x68, 0x34, 0xA5, 0xF4, 0x51, 0xA5, 0xE5, 0x34, 0xD1, 0xE5, 0xF1, 0x08, 0xF9, 0xF1, 
            0x71, 0x93, 0xE2, 0x71, 0xD8, 0x73, 0xAB, 0xD8, 0x31, 0x53, 0x62, 0x31, 0x15, 0x3F, 0x2A, 0x15, 
            0x04, 0x0C, 0x08, 0x04, 0xC7, 0x52, 0x95, 0xC7, 0x23, 0x65, 0x46, 0x23, 0xC3, 0x5E, 0x9D, 0xC3, 
            0x18, 0x28, 0x30, 0x18, 0x96, 0xA1, 0x37, 0x96, 0x05, 0x0F, 0x0A, 0x05, 0x9A, 0xB5, 0x2F, 0x9A, 
            0x07, 0x09, 0x0E, 0x07, 0x12, 0x36, 0x24, 0x12, 0x80, 0x9B, 0x1B, 0x80, 0xE2, 0x3D, 0xDF, 0xE2, 
            0xEB, 0x26, 0xCD, 0xEB, 0x27, 0x69, 0x4E, 0x27, 0xB2, 0xCD, 0x7F, 0xB2, 0x75, 0x9F, 0xEA, 0x75, 
            0x09, 0x1B, 0x12, 0x09, 0x83, 0x9E, 0x1D, 0x83, 0x2C, 0x74, 0x58, 0x2C, 0x1A, 0x2E, 0x34, 0x1A, 
            0x1B, 0x2D, 0x36, 0x1B, 0x6E, 0xB2, 0xDC, 0x6E, 0x5A, 0xEE, 0xB4, 0x5A, 0xA0, 0xFB, 0x5B, 0xA0, 
            0x52, 0xF6, 0xA4, 0x52, 0x3B, 0x4D, 0x76, 0x3B, 0xD6, 0x61, 0xB7, 0xD6, 0xB3, 0xCE, 0x7D, 0xB3, 
            0x29, 0x7B, 0x52, 0x29, 0xE3, 0x3E, 0xDD, 0xE3, 0x2F, 0x71, 0x5E, 0x2F, 0x84, 0x97, 0x13, 0x84, 
            0x53, 0xF5, 0xA6, 0x53, 0xD1, 0x68, 0xB9, 0xD1, 0x00, 0x00, 0x00, 0x00, 0xED, 0x2C, 0xC1, 0xED, 
            0x20, 0x60, 0x40, 0x20, 0xFC, 0x1F, 0xE3, 0xFC, 0xB1, 0xC8, 0x79, 0xB1, 0x5B, 0xED, 0xB6, 0x5B, 
            0x6A, 0xBE, 0xD4, 0x6A, 0xCB, 0x46, 0x8D, 0xCB, 0xBE, 0xD9, 0x67, 0xBE, 0x39, 0x4B, 0x72, 0x39, 
            0x4A, 0xDE, 0x94, 0x4A, 0x4C, 0xD4, 0x98, 0x4C, 0x58, 0xE8, 0xB0, 0x58, 0xCF, 0x4A, 0x85, 0xCF, 
            0xD0, 0x6B, 0xBB, 0xD0, 0xEF, 0x2A, 0xC5, 0xEF, 0xAA, 0xE5, 0x4F, 0xAA, 0xFB, 0x16, 0xED, 0xFB, 
            0x43, 0xC5, 0x86, 0x43, 0x4D, 0xD7, 0x9A, 0x4D, 0x33, 0x55, 0x66, 0x33, 0x85, 0x94, 0x11, 0x85, 
            0x45, 0xCF, 0x8A, 0x45, 0xF9, 0x10, 0xE9, 0xF9, 0x02, 0x06, 0x04, 0x02, 0x7F, 0x81, 0xFE, 0x7F, 
            0x50, 0xF0, 0xA0, 0x50, 0x3C, 0x44, 0x78, 0x3C, 0x9F, 0xBA, 0x25, 0x9F, 0xA8, 0xE3, 0x4B, 0xA8, 
            0x51, 0xF3, 0xA2, 0x51, 0xA3, 0xFE, 0x5D, 0xA3, 0x40, 0xC0, 0x80, 0x40, 0x8F, 0x8A, 0x05, 0x8F, 
            0x92, 0xAD, 0x3F, 0x92, 0x9D, 0xBC, 0x21, 0x9D, 0x38, 0x48, 0x70, 0x38, 0xF5, 0x04, 0xF1, 0xF5, 
            0xBC, 0xDF, 0x63, 0xBC, 0xB6, 0xC1, 0x77, 0xB6, 0xDA, 0x75, 0xAF, 0xDA, 0x21, 0x63, 0x42, 0x21, 
            0x10, 0x30, 0x20, 0x10, 0xFF, 0x1A, 0xE5, 0xFF, 0xF3, 0x0E, 0xFD, 0xF3, 0xD2, 0x6D, 0xBF, 0xD2, 
            0xCD, 0x4C, 0x81, 0xCD, 0x0C, 0x14, 0x18, 0x0C, 0x13, 0x35, 0x26, 0x13, 0xEC, 0x2F, 0xC3, 0xEC, 
            0x5F, 0xE1, 0xBE, 0x5F, 0x97, 0xA2, 0x35, 0x97, 0x44, 0xCC, 0x88, 0x44, 0x17, 0x39, 0x2E, 0x17, 
            0xC4, 0x57, 0x93, 0xC4, 0xA7, 0xF2, 0x55, 0xA7, 0x7E, 0x82, 0xFC, 0x7E, 0x3D, 0x47, 0x7A, 0x3D, 
            0x64, 0xAC, 0xC8, 0x64, 0x5D, 0xE7, 0xBA, 0x5D, 0x19, 0x2B, 0x32, 0x19, 0x73, 0x95, 0xE6, 0x73, 
            0x60, 0xA0, 0xC0, 0x60, 0x81, 0x98, 0x19, 0x81, 0x4F, 0xD1, 0x9E, 0x4F, 0xDC, 0x7F, 0xA3, 0xDC, 
            0x22, 0x66, 0x44, 0x22, 0x2A, 0x7E, 0x54, 0x2A, 0x90, 0xAB, 0x3B, 0x90, 0x88, 0x83, 0x0B, 0x88, 
            0x46, 0xCA, 0x8C, 0x46, 0xEE, 0x29, 0xC7, 0xEE, 0xB8, 0xD3, 0x6B, 0xB8, 0x14, 0x3C, 0x28, 0x14, 
            0xDE, 0x79, 0xA7, 0xDE, 0x5E, 0xE2, 0xBC, 0x5E, 0x0B, 0x1D, 0x16, 0x0B, 0xDB, 0x76, 0xAD, 0xDB, 
            0xE0, 0x3B, 0xDB, 0xE0, 0x32, 0x56, 0x64, 0x32, 0x3A, 0x4E, 0x74, 0x3A, 0x0A, 0x1E, 0x14, 0x0A, 
            0x49, 0xDB, 0x92, 0x49, 0x06, 0x0A, 0x0C, 0x06, 0x24, 0x6C, 0x48, 0x24, 0x5C, 0xE4, 0xB8, 0x5C, 
            0xC2, 0x5D, 0x9F, 0xC2, 0xD3, 0x6E, 0xBD, 0xD3, 0xAC, 0xEF, 0x43, 0xAC, 0x62, 0xA6, 0xC4, 0x62, 
            0x91, 0xA8, 0x39, 0x91, 0x95, 0xA4, 0x31, 0x95, 0xE4, 0x37, 0xD3, 0xE4, 0x79, 0x8B, 0xF2, 0x79, 
            0xE7, 0x32, 0xD5, 0xE7, 0xC8, 0x43, 0x8B, 0xC8, 0x37, 0x59, 0x6E, 0x37, 0x6D, 0xB7, 0xDA, 0x6D, 
            0x8D, 0x8C, 0x01, 0x8D, 0xD5, 0x64, 0xB1, 0xD5, 0x4E, 0xD2, 0x9C, 0x4E, 0xA9, 0xE0, 0x49, 0xA9, 
            0x6C, 0xB4, 0xD8, 0x6C, 0x56, 0xFA, 0xAC, 0x56, 0xF4, 0x07, 0xF3, 0xF4, 0xEA, 0x25, 0xCF, 0xEA, 
            0x65, 0xAF, 0xCA, 0x65, 0x7A, 0x8E, 0xF4, 0x7A, 0xAE, 0xE9, 0x47, 0xAE, 0x08, 0x18, 0x10, 0x08, 
            0xBA, 0xD5, 0x6F, 0xBA, 0x78, 0x88, 0xF0, 0x78, 0x25, 0x6F, 0x4A, 0x25, 0x2E, 0x72, 0x5C, 0x2E, 
            0x1C, 0x24, 0x38, 0x1C, 0xA6, 0xF1, 0x57, 0xA6, 0xB4, 0xC7, 0x73, 0xB4, 0xC6, 0x51, 0x97, 0xC6, 
            0xE8, 0x23, 0xCB, 0xE8, 0xDD, 0x7C, 0xA1, 0xDD, 0x74, 0x9C, 0xE8, 0x74, 0x1F, 0x21, 0x3E, 0x1F, 
            0x4B, 0xDD, 0x96, 0x4B, 0xBD, 0xDC, 0x61, 0xBD, 0x8B, 0x86, 0x0D, 0x8B, 0x8A, 0x85, 0x0F, 0x8A, 
            0x70, 0x90, 0xE0, 0x70, 0x3E, 0x42, 0x7C, 0x3E, 0xB5, 0xC4, 0x71, 0xB5, 0x66, 0xAA, 0xCC, 0x66, 
            0x48, 0xD8, 0x90, 0x48, 0x03, 0x05, 0x06, 0x03, 0xF6, 0x01, 0xF7, 0xF6, 0x0E, 0x12, 0x1C, 0x0E, 
            0x61, 0xA3, 0xC2, 0x61, 0x35, 0x5F, 0x6A, 0x35, 0x57, 0xF9, 0xAE, 0x57, 0xB9, 0xD0, 0x69, 0xB9, 
            0x86, 0x91, 0x17, 0x86, 0xC1, 0x58, 0x99, 0xC1, 0x1D, 0x27, 0x3A, 0x1D, 0x9E, 0xB9, 0x27, 0x9E, 
            0xE1, 0x38, 0xD9, 0xE1, 0xF8, 0x13, 0xEB, 0xF8, 0x98, 0xB3, 0x2B, 0x98, 0x11, 0x33, 0x22, 0x11, 
            0x69, 0xBB, 0xD2, 0x69, 0xD9, 0x70, 0xA9, 0xD9, 0x8E, 0x89, 0x07, 0x8E, 0x94, 0xA7, 0x33, 0x94, 
            0x9B, 0xB6, 0x2D, 0x9B, 0x1E, 0x22, 0x3C, 0x1E, 0x87, 0x92, 0x15, 0x87, 0xE9, 0x20, 0xC9, 0xE9, 
            0xCE, 0x49, 0x87, 0xCE, 0x55, 0xFF, 0xAA, 0x55, 0x28, 0x78, 0x50, 0x28, 0xDF, 0x7A, 0xA5, 0xDF, 
            0x8C, 0x8F, 0x03, 0x8C, 0xA1, 0xF8, 0x59, 0xA1, 0x89, 0x80, 0x09, 0x89, 0x0D, 0x17, 0x1A, 0x0D, 
            0xBF, 0xDA, 0x65, 0xBF, 0xE6, 0x31, 0xD7, 0xE6, 0x42, 0xC6, 0x84, 0x42, 0x68, 0xB8, 0xD0, 0x68, 
            0x41, 0xC3, 0x82, 0x41, 0x99, 0xB0, 0x29, 0x99, 0x2D, 0x77, 0x5A, 0x2D, 0x0F, 0x11, 0x1E, 0x0F, 
            0xB0, 0xCB, 0x7B, 0xB0, 0x54, 0xFC, 0xA8, 0x54, 0xBB, 0xD6, 0x6D, 0xBB, 0x16, 0x3A, 0x2C, 0x16,               
        };

        internal static byte[] TABLE2 = {
	        0x63, 0x63, 0xA5, 0xC6, 0x7C, 0x7C, 0x84, 0xF8, 0x77, 0x77, 0x99, 0xEE,
	        0x7B, 0x7B, 0x8D, 0xF6, 0xF2, 0xF2, 0x0D, 0xFF, 0x6B, 0x6B, 0xBD, 0xD6,
	        0x6F, 0x6F, 0xB1, 0xDE, 0xC5, 0xC5, 0x54, 0x91, 0x30, 0x30, 0x50, 0x60,
	        0x01, 0x01, 0x03, 0x02, 0x67, 0x67, 0xA9, 0xCE, 0x2B, 0x2B, 0x7D, 0x56,
	        0xFE, 0xFE, 0x19, 0xE7, 0xD7, 0xD7, 0x62, 0xB5, 0xAB, 0xAB, 0xE6, 0x4D,
	        0x76, 0x76, 0x9A, 0xEC, 0xCA, 0xCA, 0x45, 0x8F, 0x82, 0x82, 0x9D, 0x1F,
	        0xC9, 0xC9, 0x40, 0x89, 0x7D, 0x7D, 0x87, 0xFA, 0xFA, 0xFA, 0x15, 0xEF,
	        0x59, 0x59, 0xEB, 0xB2, 0x47, 0x47, 0xC9, 0x8E, 0xF0, 0xF0, 0x0B, 0xFB,
	        0xAD, 0xAD, 0xEC, 0x41, 0xD4, 0xD4, 0x67, 0xB3, 0xA2, 0xA2, 0xFD, 0x5F,
	        0xAF, 0xAF, 0xEA, 0x45, 0x9C, 0x9C, 0xBF, 0x23, 0xA4, 0xA4, 0xF7, 0x53,
	        0x72, 0x72, 0x96, 0xE4, 0xC0, 0xC0, 0x5B, 0x9B, 0xB7, 0xB7, 0xC2, 0x75,
	        0xFD, 0xFD, 0x1C, 0xE1, 0x93, 0x93, 0xAE, 0x3D, 0x26, 0x26, 0x6A, 0x4C,
	        0x36, 0x36, 0x5A, 0x6C, 0x3F, 0x3F, 0x41, 0x7E, 0xF7, 0xF7, 0x02, 0xF5,
	        0xCC, 0xCC, 0x4F, 0x83, 0x34, 0x34, 0x5C, 0x68, 0xA5, 0xA5, 0xF4, 0x51,
	        0xE5, 0xE5, 0x34, 0xD1, 0xF1, 0xF1, 0x08, 0xF9, 0x71, 0x71, 0x93, 0xE2,
	        0xD8, 0xD8, 0x73, 0xAB, 0x31, 0x31, 0x53, 0x62, 0x15, 0x15, 0x3F, 0x2A,
	        0x04, 0x04, 0x0C, 0x08, 0xC7, 0xC7, 0x52, 0x95, 0x23, 0x23, 0x65, 0x46,
	        0xC3, 0xC3, 0x5E, 0x9D, 0x18, 0x18, 0x28, 0x30, 0x96, 0x96, 0xA1, 0x37,
	        0x05, 0x05, 0x0F, 0x0A, 0x9A, 0x9A, 0xB5, 0x2F, 0x07, 0x07, 0x09, 0x0E,
	        0x12, 0x12, 0x36, 0x24, 0x80, 0x80, 0x9B, 0x1B, 0xE2, 0xE2, 0x3D, 0xDF,
	        0xEB, 0xEB, 0x26, 0xCD, 0x27, 0x27, 0x69, 0x4E, 0xB2, 0xB2, 0xCD, 0x7F,
	        0x75, 0x75, 0x9F, 0xEA, 0x09, 0x09, 0x1B, 0x12, 0x83, 0x83, 0x9E, 0x1D,
	        0x2C, 0x2C, 0x74, 0x58, 0x1A, 0x1A, 0x2E, 0x34, 0x1B, 0x1B, 0x2D, 0x36,
	        0x6E, 0x6E, 0xB2, 0xDC, 0x5A, 0x5A, 0xEE, 0xB4, 0xA0, 0xA0, 0xFB, 0x5B,
	        0x52, 0x52, 0xF6, 0xA4, 0x3B, 0x3B, 0x4D, 0x76, 0xD6, 0xD6, 0x61, 0xB7,
	        0xB3, 0xB3, 0xCE, 0x7D, 0x29, 0x29, 0x7B, 0x52, 0xE3, 0xE3, 0x3E, 0xDD,
	        0x2F, 0x2F, 0x71, 0x5E, 0x84, 0x84, 0x97, 0x13, 0x53, 0x53, 0xF5, 0xA6,
	        0xD1, 0xD1, 0x68, 0xB9, 0x00, 0x00, 0x00, 0x00, 0xED, 0xED, 0x2C, 0xC1,
	        0x20, 0x20, 0x60, 0x40, 0xFC, 0xFC, 0x1F, 0xE3, 0xB1, 0xB1, 0xC8, 0x79,
	        0x5B, 0x5B, 0xED, 0xB6, 0x6A, 0x6A, 0xBE, 0xD4, 0xCB, 0xCB, 0x46, 0x8D,
	        0xBE, 0xBE, 0xD9, 0x67, 0x39, 0x39, 0x4B, 0x72, 0x4A, 0x4A, 0xDE, 0x94,
	        0x4C, 0x4C, 0xD4, 0x98, 0x58, 0x58, 0xE8, 0xB0, 0xCF, 0xCF, 0x4A, 0x85,
	        0xD0, 0xD0, 0x6B, 0xBB, 0xEF, 0xEF, 0x2A, 0xC5, 0xAA, 0xAA, 0xE5, 0x4F,
	        0xFB, 0xFB, 0x16, 0xED, 0x43, 0x43, 0xC5, 0x86, 0x4D, 0x4D, 0xD7, 0x9A,
	        0x33, 0x33, 0x55, 0x66, 0x85, 0x85, 0x94, 0x11, 0x45, 0x45, 0xCF, 0x8A,
	        0xF9, 0xF9, 0x10, 0xE9, 0x02, 0x02, 0x06, 0x04, 0x7F, 0x7F, 0x81, 0xFE,
	        0x50, 0x50, 0xF0, 0xA0, 0x3C, 0x3C, 0x44, 0x78, 0x9F, 0x9F, 0xBA, 0x25,
	        0xA8, 0xA8, 0xE3, 0x4B, 0x51, 0x51, 0xF3, 0xA2, 0xA3, 0xA3, 0xFE, 0x5D,
	        0x40, 0x40, 0xC0, 0x80, 0x8F, 0x8F, 0x8A, 0x05, 0x92, 0x92, 0xAD, 0x3F,
	        0x9D, 0x9D, 0xBC, 0x21, 0x38, 0x38, 0x48, 0x70, 0xF5, 0xF5, 0x04, 0xF1,
	        0xBC, 0xBC, 0xDF, 0x63, 0xB6, 0xB6, 0xC1, 0x77, 0xDA, 0xDA, 0x75, 0xAF,
	        0x21, 0x21, 0x63, 0x42, 0x10, 0x10, 0x30, 0x20, 0xFF, 0xFF, 0x1A, 0xE5,
	        0xF3, 0xF3, 0x0E, 0xFD, 0xD2, 0xD2, 0x6D, 0xBF, 0xCD, 0xCD, 0x4C, 0x81,
	        0x0C, 0x0C, 0x14, 0x18, 0x13, 0x13, 0x35, 0x26, 0xEC, 0xEC, 0x2F, 0xC3,
	        0x5F, 0x5F, 0xE1, 0xBE, 0x97, 0x97, 0xA2, 0x35, 0x44, 0x44, 0xCC, 0x88,
	        0x17, 0x17, 0x39, 0x2E, 0xC4, 0xC4, 0x57, 0x93, 0xA7, 0xA7, 0xF2, 0x55,
	        0x7E, 0x7E, 0x82, 0xFC, 0x3D, 0x3D, 0x47, 0x7A, 0x64, 0x64, 0xAC, 0xC8,
	        0x5D, 0x5D, 0xE7, 0xBA, 0x19, 0x19, 0x2B, 0x32, 0x73, 0x73, 0x95, 0xE6,
	        0x60, 0x60, 0xA0, 0xC0, 0x81, 0x81, 0x98, 0x19, 0x4F, 0x4F, 0xD1, 0x9E,
	        0xDC, 0xDC, 0x7F, 0xA3, 0x22, 0x22, 0x66, 0x44, 0x2A, 0x2A, 0x7E, 0x54,
	        0x90, 0x90, 0xAB, 0x3B, 0x88, 0x88, 0x83, 0x0B, 0x46, 0x46, 0xCA, 0x8C,
	        0xEE, 0xEE, 0x29, 0xC7, 0xB8, 0xB8, 0xD3, 0x6B, 0x14, 0x14, 0x3C, 0x28,
	        0xDE, 0xDE, 0x79, 0xA7, 0x5E, 0x5E, 0xE2, 0xBC, 0x0B, 0x0B, 0x1D, 0x16,
	        0xDB, 0xDB, 0x76, 0xAD, 0xE0, 0xE0, 0x3B, 0xDB, 0x32, 0x32, 0x56, 0x64,
	        0x3A, 0x3A, 0x4E, 0x74, 0x0A, 0x0A, 0x1E, 0x14, 0x49, 0x49, 0xDB, 0x92,
	        0x06, 0x06, 0x0A, 0x0C, 0x24, 0x24, 0x6C, 0x48, 0x5C, 0x5C, 0xE4, 0xB8,
	        0xC2, 0xC2, 0x5D, 0x9F, 0xD3, 0xD3, 0x6E, 0xBD, 0xAC, 0xAC, 0xEF, 0x43,
	        0x62, 0x62, 0xA6, 0xC4, 0x91, 0x91, 0xA8, 0x39, 0x95, 0x95, 0xA4, 0x31,
	        0xE4, 0xE4, 0x37, 0xD3, 0x79, 0x79, 0x8B, 0xF2, 0xE7, 0xE7, 0x32, 0xD5,
	        0xC8, 0xC8, 0x43, 0x8B, 0x37, 0x37, 0x59, 0x6E, 0x6D, 0x6D, 0xB7, 0xDA,
	        0x8D, 0x8D, 0x8C, 0x01, 0xD5, 0xD5, 0x64, 0xB1, 0x4E, 0x4E, 0xD2, 0x9C,
	        0xA9, 0xA9, 0xE0, 0x49, 0x6C, 0x6C, 0xB4, 0xD8, 0x56, 0x56, 0xFA, 0xAC,
	        0xF4, 0xF4, 0x07, 0xF3, 0xEA, 0xEA, 0x25, 0xCF, 0x65, 0x65, 0xAF, 0xCA,
	        0x7A, 0x7A, 0x8E, 0xF4, 0xAE, 0xAE, 0xE9, 0x47, 0x08, 0x08, 0x18, 0x10,
	        0xBA, 0xBA, 0xD5, 0x6F, 0x78, 0x78, 0x88, 0xF0, 0x25, 0x25, 0x6F, 0x4A,
	        0x2E, 0x2E, 0x72, 0x5C, 0x1C, 0x1C, 0x24, 0x38, 0xA6, 0xA6, 0xF1, 0x57,
	        0xB4, 0xB4, 0xC7, 0x73, 0xC6, 0xC6, 0x51, 0x97, 0xE8, 0xE8, 0x23, 0xCB,
	        0xDD, 0xDD, 0x7C, 0xA1, 0x74, 0x74, 0x9C, 0xE8, 0x1F, 0x1F, 0x21, 0x3E,
	        0x4B, 0x4B, 0xDD, 0x96, 0xBD, 0xBD, 0xDC, 0x61, 0x8B, 0x8B, 0x86, 0x0D,
	        0x8A, 0x8A, 0x85, 0x0F, 0x70, 0x70, 0x90, 0xE0, 0x3E, 0x3E, 0x42, 0x7C,
	        0xB5, 0xB5, 0xC4, 0x71, 0x66, 0x66, 0xAA, 0xCC, 0x48, 0x48, 0xD8, 0x90,
	        0x03, 0x03, 0x05, 0x06, 0xF6, 0xF6, 0x01, 0xF7, 0x0E, 0x0E, 0x12, 0x1C,
	        0x61, 0x61, 0xA3, 0xC2, 0x35, 0x35, 0x5F, 0x6A, 0x57, 0x57, 0xF9, 0xAE,
	        0xB9, 0xB9, 0xD0, 0x69, 0x86, 0x86, 0x91, 0x17, 0xC1, 0xC1, 0x58, 0x99,
	        0x1D, 0x1D, 0x27, 0x3A, 0x9E, 0x9E, 0xB9, 0x27, 0xE1, 0xE1, 0x38, 0xD9,
	        0xF8, 0xF8, 0x13, 0xEB, 0x98, 0x98, 0xB3, 0x2B, 0x11, 0x11, 0x33, 0x22,
	        0x69, 0x69, 0xBB, 0xD2, 0xD9, 0xD9, 0x70, 0xA9, 0x8E, 0x8E, 0x89, 0x07,
	        0x94, 0x94, 0xA7, 0x33, 0x9B, 0x9B, 0xB6, 0x2D, 0x1E, 0x1E, 0x22, 0x3C,
	        0x87, 0x87, 0x92, 0x15, 0xE9, 0xE9, 0x20, 0xC9, 0xCE, 0xCE, 0x49, 0x87,
	        0x55, 0x55, 0xFF, 0xAA, 0x28, 0x28, 0x78, 0x50, 0xDF, 0xDF, 0x7A, 0xA5,
	        0x8C, 0x8C, 0x8F, 0x03, 0xA1, 0xA1, 0xF8, 0x59, 0x89, 0x89, 0x80, 0x09,
	        0x0D, 0x0D, 0x17, 0x1A, 0xBF, 0xBF, 0xDA, 0x65, 0xE6, 0xE6, 0x31, 0xD7,
	        0x42, 0x42, 0xC6, 0x84, 0x68, 0x68, 0xB8, 0xD0, 0x41, 0x41, 0xC3, 0x82,
	        0x99, 0x99, 0xB0, 0x29, 0x2D, 0x2D, 0x77, 0x5A, 0x0F, 0x0F, 0x11, 0x1E,
	        0xB0, 0xB0, 0xCB, 0x7B, 0x54, 0x54, 0xFC, 0xA8, 0xBB, 0xBB, 0xD6, 0x6D,
	        0x16, 0x16, 0x3A, 0x2C
        };

        internal static byte[] TABLE3 = {
	        0xC6, 0x63, 0x63, 0xA5, 0xF8, 0x7C, 0x7C, 0x84, 0xEE, 0x77, 0x77, 0x99,
	        0xF6, 0x7B, 0x7B, 0x8D, 0xFF, 0xF2, 0xF2, 0x0D, 0xD6, 0x6B, 0x6B, 0xBD,
	        0xDE, 0x6F, 0x6F, 0xB1, 0x91, 0xC5, 0xC5, 0x54, 0x60, 0x30, 0x30, 0x50,
	        0x02, 0x01, 0x01, 0x03, 0xCE, 0x67, 0x67, 0xA9, 0x56, 0x2B, 0x2B, 0x7D,
	        0xE7, 0xFE, 0xFE, 0x19, 0xB5, 0xD7, 0xD7, 0x62, 0x4D, 0xAB, 0xAB, 0xE6,
	        0xEC, 0x76, 0x76, 0x9A, 0x8F, 0xCA, 0xCA, 0x45, 0x1F, 0x82, 0x82, 0x9D,
	        0x89, 0xC9, 0xC9, 0x40, 0xFA, 0x7D, 0x7D, 0x87, 0xEF, 0xFA, 0xFA, 0x15,
	        0xB2, 0x59, 0x59, 0xEB, 0x8E, 0x47, 0x47, 0xC9, 0xFB, 0xF0, 0xF0, 0x0B,
	        0x41, 0xAD, 0xAD, 0xEC, 0xB3, 0xD4, 0xD4, 0x67, 0x5F, 0xA2, 0xA2, 0xFD,
	        0x45, 0xAF, 0xAF, 0xEA, 0x23, 0x9C, 0x9C, 0xBF, 0x53, 0xA4, 0xA4, 0xF7,
	        0xE4, 0x72, 0x72, 0x96, 0x9B, 0xC0, 0xC0, 0x5B, 0x75, 0xB7, 0xB7, 0xC2,
	        0xE1, 0xFD, 0xFD, 0x1C, 0x3D, 0x93, 0x93, 0xAE, 0x4C, 0x26, 0x26, 0x6A,
	        0x6C, 0x36, 0x36, 0x5A, 0x7E, 0x3F, 0x3F, 0x41, 0xF5, 0xF7, 0xF7, 0x02,
	        0x83, 0xCC, 0xCC, 0x4F, 0x68, 0x34, 0x34, 0x5C, 0x51, 0xA5, 0xA5, 0xF4,
	        0xD1, 0xE5, 0xE5, 0x34, 0xF9, 0xF1, 0xF1, 0x08, 0xE2, 0x71, 0x71, 0x93,
	        0xAB, 0xD8, 0xD8, 0x73, 0x62, 0x31, 0x31, 0x53, 0x2A, 0x15, 0x15, 0x3F,
	        0x08, 0x04, 0x04, 0x0C, 0x95, 0xC7, 0xC7, 0x52, 0x46, 0x23, 0x23, 0x65,
	        0x9D, 0xC3, 0xC3, 0x5E, 0x30, 0x18, 0x18, 0x28, 0x37, 0x96, 0x96, 0xA1,
	        0x0A, 0x05, 0x05, 0x0F, 0x2F, 0x9A, 0x9A, 0xB5, 0x0E, 0x07, 0x07, 0x09,
	        0x24, 0x12, 0x12, 0x36, 0x1B, 0x80, 0x80, 0x9B, 0xDF, 0xE2, 0xE2, 0x3D,
	        0xCD, 0xEB, 0xEB, 0x26, 0x4E, 0x27, 0x27, 0x69, 0x7F, 0xB2, 0xB2, 0xCD,
	        0xEA, 0x75, 0x75, 0x9F, 0x12, 0x09, 0x09, 0x1B, 0x1D, 0x83, 0x83, 0x9E,
	        0x58, 0x2C, 0x2C, 0x74, 0x34, 0x1A, 0x1A, 0x2E, 0x36, 0x1B, 0x1B, 0x2D,
	        0xDC, 0x6E, 0x6E, 0xB2, 0xB4, 0x5A, 0x5A, 0xEE, 0x5B, 0xA0, 0xA0, 0xFB,
	        0xA4, 0x52, 0x52, 0xF6, 0x76, 0x3B, 0x3B, 0x4D, 0xB7, 0xD6, 0xD6, 0x61,
	        0x7D, 0xB3, 0xB3, 0xCE, 0x52, 0x29, 0x29, 0x7B, 0xDD, 0xE3, 0xE3, 0x3E,
	        0x5E, 0x2F, 0x2F, 0x71, 0x13, 0x84, 0x84, 0x97, 0xA6, 0x53, 0x53, 0xF5,
	        0xB9, 0xD1, 0xD1, 0x68, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xED, 0xED, 0x2C,
	        0x40, 0x20, 0x20, 0x60, 0xE3, 0xFC, 0xFC, 0x1F, 0x79, 0xB1, 0xB1, 0xC8,
	        0xB6, 0x5B, 0x5B, 0xED, 0xD4, 0x6A, 0x6A, 0xBE, 0x8D, 0xCB, 0xCB, 0x46,
	        0x67, 0xBE, 0xBE, 0xD9, 0x72, 0x39, 0x39, 0x4B, 0x94, 0x4A, 0x4A, 0xDE,
	        0x98, 0x4C, 0x4C, 0xD4, 0xB0, 0x58, 0x58, 0xE8, 0x85, 0xCF, 0xCF, 0x4A,
	        0xBB, 0xD0, 0xD0, 0x6B, 0xC5, 0xEF, 0xEF, 0x2A, 0x4F, 0xAA, 0xAA, 0xE5,
	        0xED, 0xFB, 0xFB, 0x16, 0x86, 0x43, 0x43, 0xC5, 0x9A, 0x4D, 0x4D, 0xD7,
	        0x66, 0x33, 0x33, 0x55, 0x11, 0x85, 0x85, 0x94, 0x8A, 0x45, 0x45, 0xCF,
	        0xE9, 0xF9, 0xF9, 0x10, 0x04, 0x02, 0x02, 0x06, 0xFE, 0x7F, 0x7F, 0x81,
	        0xA0, 0x50, 0x50, 0xF0, 0x78, 0x3C, 0x3C, 0x44, 0x25, 0x9F, 0x9F, 0xBA,
	        0x4B, 0xA8, 0xA8, 0xE3, 0xA2, 0x51, 0x51, 0xF3, 0x5D, 0xA3, 0xA3, 0xFE,
	        0x80, 0x40, 0x40, 0xC0, 0x05, 0x8F, 0x8F, 0x8A, 0x3F, 0x92, 0x92, 0xAD,
	        0x21, 0x9D, 0x9D, 0xBC, 0x70, 0x38, 0x38, 0x48, 0xF1, 0xF5, 0xF5, 0x04,
	        0x63, 0xBC, 0xBC, 0xDF, 0x77, 0xB6, 0xB6, 0xC1, 0xAF, 0xDA, 0xDA, 0x75,
	        0x42, 0x21, 0x21, 0x63, 0x20, 0x10, 0x10, 0x30, 0xE5, 0xFF, 0xFF, 0x1A,
	        0xFD, 0xF3, 0xF3, 0x0E, 0xBF, 0xD2, 0xD2, 0x6D, 0x81, 0xCD, 0xCD, 0x4C,
	        0x18, 0x0C, 0x0C, 0x14, 0x26, 0x13, 0x13, 0x35, 0xC3, 0xEC, 0xEC, 0x2F,
	        0xBE, 0x5F, 0x5F, 0xE1, 0x35, 0x97, 0x97, 0xA2, 0x88, 0x44, 0x44, 0xCC,
	        0x2E, 0x17, 0x17, 0x39, 0x93, 0xC4, 0xC4, 0x57, 0x55, 0xA7, 0xA7, 0xF2,
	        0xFC, 0x7E, 0x7E, 0x82, 0x7A, 0x3D, 0x3D, 0x47, 0xC8, 0x64, 0x64, 0xAC,
	        0xBA, 0x5D, 0x5D, 0xE7, 0x32, 0x19, 0x19, 0x2B, 0xE6, 0x73, 0x73, 0x95,
	        0xC0, 0x60, 0x60, 0xA0, 0x19, 0x81, 0x81, 0x98, 0x9E, 0x4F, 0x4F, 0xD1,
	        0xA3, 0xDC, 0xDC, 0x7F, 0x44, 0x22, 0x22, 0x66, 0x54, 0x2A, 0x2A, 0x7E,
	        0x3B, 0x90, 0x90, 0xAB, 0x0B, 0x88, 0x88, 0x83, 0x8C, 0x46, 0x46, 0xCA,
	        0xC7, 0xEE, 0xEE, 0x29, 0x6B, 0xB8, 0xB8, 0xD3, 0x28, 0x14, 0x14, 0x3C,
	        0xA7, 0xDE, 0xDE, 0x79, 0xBC, 0x5E, 0x5E, 0xE2, 0x16, 0x0B, 0x0B, 0x1D,
	        0xAD, 0xDB, 0xDB, 0x76, 0xDB, 0xE0, 0xE0, 0x3B, 0x64, 0x32, 0x32, 0x56,
	        0x74, 0x3A, 0x3A, 0x4E, 0x14, 0x0A, 0x0A, 0x1E, 0x92, 0x49, 0x49, 0xDB,
	        0x0C, 0x06, 0x06, 0x0A, 0x48, 0x24, 0x24, 0x6C, 0xB8, 0x5C, 0x5C, 0xE4,
	        0x9F, 0xC2, 0xC2, 0x5D, 0xBD, 0xD3, 0xD3, 0x6E, 0x43, 0xAC, 0xAC, 0xEF,
	        0xC4, 0x62, 0x62, 0xA6, 0x39, 0x91, 0x91, 0xA8, 0x31, 0x95, 0x95, 0xA4,
	        0xD3, 0xE4, 0xE4, 0x37, 0xF2, 0x79, 0x79, 0x8B, 0xD5, 0xE7, 0xE7, 0x32,
	        0x8B, 0xC8, 0xC8, 0x43, 0x6E, 0x37, 0x37, 0x59, 0xDA, 0x6D, 0x6D, 0xB7,
	        0x01, 0x8D, 0x8D, 0x8C, 0xB1, 0xD5, 0xD5, 0x64, 0x9C, 0x4E, 0x4E, 0xD2,
	        0x49, 0xA9, 0xA9, 0xE0, 0xD8, 0x6C, 0x6C, 0xB4, 0xAC, 0x56, 0x56, 0xFA,
	        0xF3, 0xF4, 0xF4, 0x07, 0xCF, 0xEA, 0xEA, 0x25, 0xCA, 0x65, 0x65, 0xAF,
	        0xF4, 0x7A, 0x7A, 0x8E, 0x47, 0xAE, 0xAE, 0xE9, 0x10, 0x08, 0x08, 0x18,
	        0x6F, 0xBA, 0xBA, 0xD5, 0xF0, 0x78, 0x78, 0x88, 0x4A, 0x25, 0x25, 0x6F,
	        0x5C, 0x2E, 0x2E, 0x72, 0x38, 0x1C, 0x1C, 0x24, 0x57, 0xA6, 0xA6, 0xF1,
	        0x73, 0xB4, 0xB4, 0xC7, 0x97, 0xC6, 0xC6, 0x51, 0xCB, 0xE8, 0xE8, 0x23,
	        0xA1, 0xDD, 0xDD, 0x7C, 0xE8, 0x74, 0x74, 0x9C, 0x3E, 0x1F, 0x1F, 0x21,
	        0x96, 0x4B, 0x4B, 0xDD, 0x61, 0xBD, 0xBD, 0xDC, 0x0D, 0x8B, 0x8B, 0x86,
	        0x0F, 0x8A, 0x8A, 0x85, 0xE0, 0x70, 0x70, 0x90, 0x7C, 0x3E, 0x3E, 0x42,
	        0x71, 0xB5, 0xB5, 0xC4, 0xCC, 0x66, 0x66, 0xAA, 0x90, 0x48, 0x48, 0xD8,
	        0x06, 0x03, 0x03, 0x05, 0xF7, 0xF6, 0xF6, 0x01, 0x1C, 0x0E, 0x0E, 0x12,
	        0xC2, 0x61, 0x61, 0xA3, 0x6A, 0x35, 0x35, 0x5F, 0xAE, 0x57, 0x57, 0xF9,
	        0x69, 0xB9, 0xB9, 0xD0, 0x17, 0x86, 0x86, 0x91, 0x99, 0xC1, 0xC1, 0x58,
	        0x3A, 0x1D, 0x1D, 0x27, 0x27, 0x9E, 0x9E, 0xB9, 0xD9, 0xE1, 0xE1, 0x38,
	        0xEB, 0xF8, 0xF8, 0x13, 0x2B, 0x98, 0x98, 0xB3, 0x22, 0x11, 0x11, 0x33,
	        0xD2, 0x69, 0x69, 0xBB, 0xA9, 0xD9, 0xD9, 0x70, 0x07, 0x8E, 0x8E, 0x89,
	        0x33, 0x94, 0x94, 0xA7, 0x2D, 0x9B, 0x9B, 0xB6, 0x3C, 0x1E, 0x1E, 0x22,
	        0x15, 0x87, 0x87, 0x92, 0xC9, 0xE9, 0xE9, 0x20, 0x87, 0xCE, 0xCE, 0x49,
	        0xAA, 0x55, 0x55, 0xFF, 0x50, 0x28, 0x28, 0x78, 0xA5, 0xDF, 0xDF, 0x7A,
	        0x03, 0x8C, 0x8C, 0x8F, 0x59, 0xA1, 0xA1, 0xF8, 0x09, 0x89, 0x89, 0x80,
	        0x1A, 0x0D, 0x0D, 0x17, 0x65, 0xBF, 0xBF, 0xDA, 0xD7, 0xE6, 0xE6, 0x31,
	        0x84, 0x42, 0x42, 0xC6, 0xD0, 0x68, 0x68, 0xB8, 0x82, 0x41, 0x41, 0xC3,
	        0x29, 0x99, 0x99, 0xB0, 0x5A, 0x2D, 0x2D, 0x77, 0x1E, 0x0F, 0x0F, 0x11,
	        0x7B, 0xB0, 0xB0, 0xCB, 0xA8, 0x54, 0x54, 0xFC, 0x6D, 0xBB, 0xBB, 0xD6,
	        0x2C, 0x16, 0x16, 0x3A
        };

        internal static byte[] TABLE4 = {
	        0xA5, 0xC6, 0x63, 0x63, 0x84, 0xF8, 0x7C, 0x7C, 0x99, 0xEE, 0x77, 0x77,
	        0x8D, 0xF6, 0x7B, 0x7B, 0x0D, 0xFF, 0xF2, 0xF2, 0xBD, 0xD6, 0x6B, 0x6B,
	        0xB1, 0xDE, 0x6F, 0x6F, 0x54, 0x91, 0xC5, 0xC5, 0x50, 0x60, 0x30, 0x30,
	        0x03, 0x02, 0x01, 0x01, 0xA9, 0xCE, 0x67, 0x67, 0x7D, 0x56, 0x2B, 0x2B,
	        0x19, 0xE7, 0xFE, 0xFE, 0x62, 0xB5, 0xD7, 0xD7, 0xE6, 0x4D, 0xAB, 0xAB,
	        0x9A, 0xEC, 0x76, 0x76, 0x45, 0x8F, 0xCA, 0xCA, 0x9D, 0x1F, 0x82, 0x82,
	        0x40, 0x89, 0xC9, 0xC9, 0x87, 0xFA, 0x7D, 0x7D, 0x15, 0xEF, 0xFA, 0xFA,
	        0xEB, 0xB2, 0x59, 0x59, 0xC9, 0x8E, 0x47, 0x47, 0x0B, 0xFB, 0xF0, 0xF0,
	        0xEC, 0x41, 0xAD, 0xAD, 0x67, 0xB3, 0xD4, 0xD4, 0xFD, 0x5F, 0xA2, 0xA2,
	        0xEA, 0x45, 0xAF, 0xAF, 0xBF, 0x23, 0x9C, 0x9C, 0xF7, 0x53, 0xA4, 0xA4,
	        0x96, 0xE4, 0x72, 0x72, 0x5B, 0x9B, 0xC0, 0xC0, 0xC2, 0x75, 0xB7, 0xB7,
	        0x1C, 0xE1, 0xFD, 0xFD, 0xAE, 0x3D, 0x93, 0x93, 0x6A, 0x4C, 0x26, 0x26,
	        0x5A, 0x6C, 0x36, 0x36, 0x41, 0x7E, 0x3F, 0x3F, 0x02, 0xF5, 0xF7, 0xF7,
	        0x4F, 0x83, 0xCC, 0xCC, 0x5C, 0x68, 0x34, 0x34, 0xF4, 0x51, 0xA5, 0xA5,
	        0x34, 0xD1, 0xE5, 0xE5, 0x08, 0xF9, 0xF1, 0xF1, 0x93, 0xE2, 0x71, 0x71,
	        0x73, 0xAB, 0xD8, 0xD8, 0x53, 0x62, 0x31, 0x31, 0x3F, 0x2A, 0x15, 0x15,
	        0x0C, 0x08, 0x04, 0x04, 0x52, 0x95, 0xC7, 0xC7, 0x65, 0x46, 0x23, 0x23,
	        0x5E, 0x9D, 0xC3, 0xC3, 0x28, 0x30, 0x18, 0x18, 0xA1, 0x37, 0x96, 0x96,
	        0x0F, 0x0A, 0x05, 0x05, 0xB5, 0x2F, 0x9A, 0x9A, 0x09, 0x0E, 0x07, 0x07,
	        0x36, 0x24, 0x12, 0x12, 0x9B, 0x1B, 0x80, 0x80, 0x3D, 0xDF, 0xE2, 0xE2,
	        0x26, 0xCD, 0xEB, 0xEB, 0x69, 0x4E, 0x27, 0x27, 0xCD, 0x7F, 0xB2, 0xB2,
	        0x9F, 0xEA, 0x75, 0x75, 0x1B, 0x12, 0x09, 0x09, 0x9E, 0x1D, 0x83, 0x83,
	        0x74, 0x58, 0x2C, 0x2C, 0x2E, 0x34, 0x1A, 0x1A, 0x2D, 0x36, 0x1B, 0x1B,
	        0xB2, 0xDC, 0x6E, 0x6E, 0xEE, 0xB4, 0x5A, 0x5A, 0xFB, 0x5B, 0xA0, 0xA0,
	        0xF6, 0xA4, 0x52, 0x52, 0x4D, 0x76, 0x3B, 0x3B, 0x61, 0xB7, 0xD6, 0xD6,
	        0xCE, 0x7D, 0xB3, 0xB3, 0x7B, 0x52, 0x29, 0x29, 0x3E, 0xDD, 0xE3, 0xE3,
	        0x71, 0x5E, 0x2F, 0x2F, 0x97, 0x13, 0x84, 0x84, 0xF5, 0xA6, 0x53, 0x53,
	        0x68, 0xB9, 0xD1, 0xD1, 0x00, 0x00, 0x00, 0x00, 0x2C, 0xC1, 0xED, 0xED,
	        0x60, 0x40, 0x20, 0x20, 0x1F, 0xE3, 0xFC, 0xFC, 0xC8, 0x79, 0xB1, 0xB1,
	        0xED, 0xB6, 0x5B, 0x5B, 0xBE, 0xD4, 0x6A, 0x6A, 0x46, 0x8D, 0xCB, 0xCB,
	        0xD9, 0x67, 0xBE, 0xBE, 0x4B, 0x72, 0x39, 0x39, 0xDE, 0x94, 0x4A, 0x4A,
	        0xD4, 0x98, 0x4C, 0x4C, 0xE8, 0xB0, 0x58, 0x58, 0x4A, 0x85, 0xCF, 0xCF,
	        0x6B, 0xBB, 0xD0, 0xD0, 0x2A, 0xC5, 0xEF, 0xEF, 0xE5, 0x4F, 0xAA, 0xAA,
	        0x16, 0xED, 0xFB, 0xFB, 0xC5, 0x86, 0x43, 0x43, 0xD7, 0x9A, 0x4D, 0x4D,
	        0x55, 0x66, 0x33, 0x33, 0x94, 0x11, 0x85, 0x85, 0xCF, 0x8A, 0x45, 0x45,
	        0x10, 0xE9, 0xF9, 0xF9, 0x06, 0x04, 0x02, 0x02, 0x81, 0xFE, 0x7F, 0x7F,
	        0xF0, 0xA0, 0x50, 0x50, 0x44, 0x78, 0x3C, 0x3C, 0xBA, 0x25, 0x9F, 0x9F,
	        0xE3, 0x4B, 0xA8, 0xA8, 0xF3, 0xA2, 0x51, 0x51, 0xFE, 0x5D, 0xA3, 0xA3,
	        0xC0, 0x80, 0x40, 0x40, 0x8A, 0x05, 0x8F, 0x8F, 0xAD, 0x3F, 0x92, 0x92,
	        0xBC, 0x21, 0x9D, 0x9D, 0x48, 0x70, 0x38, 0x38, 0x04, 0xF1, 0xF5, 0xF5,
	        0xDF, 0x63, 0xBC, 0xBC, 0xC1, 0x77, 0xB6, 0xB6, 0x75, 0xAF, 0xDA, 0xDA,
	        0x63, 0x42, 0x21, 0x21, 0x30, 0x20, 0x10, 0x10, 0x1A, 0xE5, 0xFF, 0xFF,
	        0x0E, 0xFD, 0xF3, 0xF3, 0x6D, 0xBF, 0xD2, 0xD2, 0x4C, 0x81, 0xCD, 0xCD,
	        0x14, 0x18, 0x0C, 0x0C, 0x35, 0x26, 0x13, 0x13, 0x2F, 0xC3, 0xEC, 0xEC,
	        0xE1, 0xBE, 0x5F, 0x5F, 0xA2, 0x35, 0x97, 0x97, 0xCC, 0x88, 0x44, 0x44,
	        0x39, 0x2E, 0x17, 0x17, 0x57, 0x93, 0xC4, 0xC4, 0xF2, 0x55, 0xA7, 0xA7,
	        0x82, 0xFC, 0x7E, 0x7E, 0x47, 0x7A, 0x3D, 0x3D, 0xAC, 0xC8, 0x64, 0x64,
	        0xE7, 0xBA, 0x5D, 0x5D, 0x2B, 0x32, 0x19, 0x19, 0x95, 0xE6, 0x73, 0x73,
	        0xA0, 0xC0, 0x60, 0x60, 0x98, 0x19, 0x81, 0x81, 0xD1, 0x9E, 0x4F, 0x4F,
	        0x7F, 0xA3, 0xDC, 0xDC, 0x66, 0x44, 0x22, 0x22, 0x7E, 0x54, 0x2A, 0x2A,
	        0xAB, 0x3B, 0x90, 0x90, 0x83, 0x0B, 0x88, 0x88, 0xCA, 0x8C, 0x46, 0x46,
	        0x29, 0xC7, 0xEE, 0xEE, 0xD3, 0x6B, 0xB8, 0xB8, 0x3C, 0x28, 0x14, 0x14,
	        0x79, 0xA7, 0xDE, 0xDE, 0xE2, 0xBC, 0x5E, 0x5E, 0x1D, 0x16, 0x0B, 0x0B,
	        0x76, 0xAD, 0xDB, 0xDB, 0x3B, 0xDB, 0xE0, 0xE0, 0x56, 0x64, 0x32, 0x32,
	        0x4E, 0x74, 0x3A, 0x3A, 0x1E, 0x14, 0x0A, 0x0A, 0xDB, 0x92, 0x49, 0x49,
	        0x0A, 0x0C, 0x06, 0x06, 0x6C, 0x48, 0x24, 0x24, 0xE4, 0xB8, 0x5C, 0x5C,
	        0x5D, 0x9F, 0xC2, 0xC2, 0x6E, 0xBD, 0xD3, 0xD3, 0xEF, 0x43, 0xAC, 0xAC,
	        0xA6, 0xC4, 0x62, 0x62, 0xA8, 0x39, 0x91, 0x91, 0xA4, 0x31, 0x95, 0x95,
	        0x37, 0xD3, 0xE4, 0xE4, 0x8B, 0xF2, 0x79, 0x79, 0x32, 0xD5, 0xE7, 0xE7,
	        0x43, 0x8B, 0xC8, 0xC8, 0x59, 0x6E, 0x37, 0x37, 0xB7, 0xDA, 0x6D, 0x6D,
	        0x8C, 0x01, 0x8D, 0x8D, 0x64, 0xB1, 0xD5, 0xD5, 0xD2, 0x9C, 0x4E, 0x4E,
	        0xE0, 0x49, 0xA9, 0xA9, 0xB4, 0xD8, 0x6C, 0x6C, 0xFA, 0xAC, 0x56, 0x56,
	        0x07, 0xF3, 0xF4, 0xF4, 0x25, 0xCF, 0xEA, 0xEA, 0xAF, 0xCA, 0x65, 0x65,
	        0x8E, 0xF4, 0x7A, 0x7A, 0xE9, 0x47, 0xAE, 0xAE, 0x18, 0x10, 0x08, 0x08,
	        0xD5, 0x6F, 0xBA, 0xBA, 0x88, 0xF0, 0x78, 0x78, 0x6F, 0x4A, 0x25, 0x25,
	        0x72, 0x5C, 0x2E, 0x2E, 0x24, 0x38, 0x1C, 0x1C, 0xF1, 0x57, 0xA6, 0xA6,
	        0xC7, 0x73, 0xB4, 0xB4, 0x51, 0x97, 0xC6, 0xC6, 0x23, 0xCB, 0xE8, 0xE8,
	        0x7C, 0xA1, 0xDD, 0xDD, 0x9C, 0xE8, 0x74, 0x74, 0x21, 0x3E, 0x1F, 0x1F,
	        0xDD, 0x96, 0x4B, 0x4B, 0xDC, 0x61, 0xBD, 0xBD, 0x86, 0x0D, 0x8B, 0x8B,
	        0x85, 0x0F, 0x8A, 0x8A, 0x90, 0xE0, 0x70, 0x70, 0x42, 0x7C, 0x3E, 0x3E,
	        0xC4, 0x71, 0xB5, 0xB5, 0xAA, 0xCC, 0x66, 0x66, 0xD8, 0x90, 0x48, 0x48,
	        0x05, 0x06, 0x03, 0x03, 0x01, 0xF7, 0xF6, 0xF6, 0x12, 0x1C, 0x0E, 0x0E,
	        0xA3, 0xC2, 0x61, 0x61, 0x5F, 0x6A, 0x35, 0x35, 0xF9, 0xAE, 0x57, 0x57,
	        0xD0, 0x69, 0xB9, 0xB9, 0x91, 0x17, 0x86, 0x86, 0x58, 0x99, 0xC1, 0xC1,
	        0x27, 0x3A, 0x1D, 0x1D, 0xB9, 0x27, 0x9E, 0x9E, 0x38, 0xD9, 0xE1, 0xE1,
	        0x13, 0xEB, 0xF8, 0xF8, 0xB3, 0x2B, 0x98, 0x98, 0x33, 0x22, 0x11, 0x11,
	        0xBB, 0xD2, 0x69, 0x69, 0x70, 0xA9, 0xD9, 0xD9, 0x89, 0x07, 0x8E, 0x8E,
	        0xA7, 0x33, 0x94, 0x94, 0xB6, 0x2D, 0x9B, 0x9B, 0x22, 0x3C, 0x1E, 0x1E,
	        0x92, 0x15, 0x87, 0x87, 0x20, 0xC9, 0xE9, 0xE9, 0x49, 0x87, 0xCE, 0xCE,
	        0xFF, 0xAA, 0x55, 0x55, 0x78, 0x50, 0x28, 0x28, 0x7A, 0xA5, 0xDF, 0xDF,
	        0x8F, 0x03, 0x8C, 0x8C, 0xF8, 0x59, 0xA1, 0xA1, 0x80, 0x09, 0x89, 0x89,
	        0x17, 0x1A, 0x0D, 0x0D, 0xDA, 0x65, 0xBF, 0xBF, 0x31, 0xD7, 0xE6, 0xE6,
	        0xC6, 0x84, 0x42, 0x42, 0xB8, 0xD0, 0x68, 0x68, 0xC3, 0x82, 0x41, 0x41,
	        0xB0, 0x29, 0x99, 0x99, 0x77, 0x5A, 0x2D, 0x2D, 0x11, 0x1E, 0x0F, 0x0F,
	        0xCB, 0x7B, 0xB0, 0xB0, 0xFC, 0xA8, 0x54, 0x54, 0xD6, 0x6D, 0xBB, 0xBB,
	        0x3A, 0x2C, 0x16, 0x16
        };

        internal static byte[] DATA5 = {
	        0x63, 0x7C, 0x77, 0x7B, 0xF2, 0x6B, 0x6F, 0xC5, 0x30, 0x01, 0x67, 0x2B,
	        0xFE, 0xD7, 0xAB, 0x76, 0xCA, 0x82, 0xC9, 0x7D, 0xFA, 0x59, 0x47, 0xF0,
	        0xAD, 0xD4, 0xA2, 0xAF, 0x9C, 0xA4, 0x72, 0xC0, 0xB7, 0xFD, 0x93, 0x26,
	        0x36, 0x3F, 0xF7, 0xCC, 0x34, 0xA5, 0xE5, 0xF1, 0x71, 0xD8, 0x31, 0x15,
	        0x04, 0xC7, 0x23, 0xC3, 0x18, 0x96, 0x05, 0x9A, 0x07, 0x12, 0x80, 0xE2,
	        0xEB, 0x27, 0xB2, 0x75, 0x09, 0x83, 0x2C, 0x1A, 0x1B, 0x6E, 0x5A, 0xA0,
	        0x52, 0x3B, 0xD6, 0xB3, 0x29, 0xE3, 0x2F, 0x84, 0x53, 0xD1, 0x00, 0xED,
	        0x20, 0xFC, 0xB1, 0x5B, 0x6A, 0xCB, 0xBE, 0x39, 0x4A, 0x4C, 0x58, 0xCF,
	        0xD0, 0xEF, 0xAA, 0xFB, 0x43, 0x4D, 0x33, 0x85, 0x45, 0xF9, 0x02, 0x7F,
	        0x50, 0x3C, 0x9F, 0xA8, 0x51, 0xA3, 0x40, 0x8F, 0x92, 0x9D, 0x38, 0xF5,
	        0xBC, 0xB6, 0xDA, 0x21, 0x10, 0xFF, 0xF3, 0xD2, 0xCD, 0x0C, 0x13, 0xEC,
	        0x5F, 0x97, 0x44, 0x17, 0xC4, 0xA7, 0x7E, 0x3D, 0x64, 0x5D, 0x19, 0x73,
	        0x60, 0x81, 0x4F, 0xDC, 0x22, 0x2A, 0x90, 0x88, 0x46, 0xEE, 0xB8, 0x14,
	        0xDE, 0x5E, 0x0B, 0xDB, 0xE0, 0x32, 0x3A, 0x0A, 0x49, 0x06, 0x24, 0x5C,
	        0xC2, 0xD3, 0xAC, 0x62, 0x91, 0x95, 0xE4, 0x79, 0xE7, 0xC8, 0x37, 0x6D,
	        0x8D, 0xD5, 0x4E, 0xA9, 0x6C, 0x56, 0xF4, 0xEA, 0x65, 0x7A, 0xAE, 0x08,
	        0xBA, 0x78, 0x25, 0x2E, 0x1C, 0xA6, 0xB4, 0xC6, 0xE8, 0xDD, 0x74, 0x1F,
	        0x4B, 0xBD, 0x8B, 0x8A, 0x70, 0x3E, 0xB5, 0x66, 0x48, 0x03, 0xF6, 0x0E,
	        0x61, 0x35, 0x57, 0xB9, 0x86, 0xC1, 0x1D, 0x9E, 0xE1, 0xF8, 0x98, 0x11,
	        0x69, 0xD9, 0x8E, 0x94, 0x9B, 0x1E, 0x87, 0xE9, 0xCE, 0x55, 0x28, 0xDF,
	        0x8C, 0xA1, 0x89, 0x0D, 0xBF, 0xE6, 0x42, 0x68, 0x41, 0x99, 0x2D, 0x0F,
	        0xB0, 0x54, 0xBB, 0x16, 0x52, 0x09, 0x6A, 0xD5, 0x30, 0x36, 0xA5, 0x38,
	        0xBF, 0x40, 0xA3, 0x9E, 0x81, 0xF3, 0xD7, 0xFB, 0x7C, 0xE3, 0x39, 0x82,
	        0x9B, 0x2F, 0xFF, 0x87, 0x34, 0x8E, 0x43, 0x44, 0xC4, 0xDE, 0xE9, 0xCB,
	        0x54, 0x7B, 0x94, 0x32, 0xA6, 0xC2, 0x23, 0x3D, 0xEE, 0x4C, 0x95, 0x0B,
	        0x42, 0xFA, 0xC3, 0x4E, 0x08, 0x2E, 0xA1, 0x66, 0x28, 0xD9, 0x24, 0xB2,
	        0x76, 0x5B, 0xA2, 0x49, 0x6D, 0x8B, 0xD1, 0x25, 0x72, 0xF8, 0xF6, 0x64,
	        0x86, 0x68, 0x98, 0x16, 0xD4, 0xA4, 0x5C, 0xCC, 0x5D, 0x65, 0xB6, 0x92,
	        0x6C, 0x70, 0x48, 0x50, 0xFD, 0xED, 0xB9, 0xDA, 0x5E, 0x15, 0x46, 0x57,
	        0xA7, 0x8D, 0x9D, 0x84, 0x90, 0xD8, 0xAB, 0x00, 0x8C, 0xBC, 0xD3, 0x0A,
	        0xF7, 0xE4, 0x58, 0x05, 0xB8, 0xB3, 0x45, 0x06, 0xD0, 0x2C, 0x1E, 0x8F,
	        0xCA, 0x3F, 0x0F, 0x02, 0xC1, 0xAF, 0xBD, 0x03, 0x01, 0x13, 0x8A, 0x6B,
	        0x3A, 0x91, 0x11, 0x41, 0x4F, 0x67, 0xDC, 0xEA, 0x97, 0xF2, 0xCF, 0xCE,
	        0xF0, 0xB4, 0xE6, 0x73, 0x96, 0xAC, 0x74, 0x22, 0xE7, 0xAD, 0x35, 0x85,
	        0xE2, 0xF9, 0x37, 0xE8, 0x1C, 0x75, 0xDF, 0x6E, 0x47, 0xF1, 0x1A, 0x71,
	        0x1D, 0x29, 0xC5, 0x89, 0x6F, 0xB7, 0x62, 0x0E, 0xAA, 0x18, 0xBE, 0x1B,
	        0xFC, 0x56, 0x3E, 0x4B, 0xC6, 0xD2, 0x79, 0x20, 0x9A, 0xDB, 0xC0, 0xFE,
	        0x78, 0xCD, 0x5A, 0xF4, 0x1F, 0xDD, 0xA8, 0x33, 0x88, 0x07, 0xC7, 0x31,
	        0xB1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xEC, 0x5F, 0x60, 0x51, 0x7F, 0xA9,
	        0x19, 0xB5, 0x4A, 0x0D, 0x2D, 0xE5, 0x7A, 0x9F, 0x93, 0xC9, 0x9C, 0xEF,
	        0xA0, 0xE0, 0x3B, 0x4D, 0xAE, 0x2A, 0xF5, 0xB0, 0xC8, 0xEB, 0xBB, 0x3C,
	        0x83, 0x53, 0x99, 0x61, 0x17, 0x2B, 0x04, 0x7E, 0xBA, 0x77, 0xD6, 0x26,
	        0xE1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0C, 0x7D, 0xC6, 0x63, 0x63, 0xA5,
	        0xF8, 0x7C, 0x7C, 0x84, 0xEE, 0x77, 0x77, 0x99, 0xF6, 0x7B, 0x7B, 0x8D,
	        0xFF, 0xF2, 0xF2, 0x0D, 0xD6, 0x6B, 0x6B, 0xBD, 0xDE, 0x6F, 0x6F, 0xB1,
	        0x91, 0xC5, 0xC5, 0x54, 0x60, 0x30, 0x30, 0x50, 0x02, 0x01, 0x01, 0x03,
	        0xCE, 0x67, 0x67, 0xA9, 0x56, 0x2B, 0x2B, 0x7D, 0xE7, 0xFE, 0xFE, 0x19,
	        0xB5, 0xD7, 0xD7, 0x62, 0x4D, 0xAB, 0xAB, 0xE6, 0xEC, 0x76, 0x76, 0x9A,
	        0x8F, 0xCA, 0xCA, 0x45, 0x1F, 0x82, 0x82, 0x9D, 0x89, 0xC9, 0xC9, 0x40,
	        0xFA, 0x7D, 0x7D, 0x87, 0xEF, 0xFA, 0xFA, 0x15, 0xB2, 0x59, 0x59, 0xEB,
	        0x8E, 0x47, 0x47, 0xC9, 0xFB, 0xF0, 0xF0, 0x0B, 0x41, 0xAD, 0xAD, 0xEC,
	        0xB3, 0xD4, 0xD4, 0x67, 0x5F, 0xA2, 0xA2, 0xFD, 0x45, 0xAF, 0xAF, 0xEA,
	        0x23, 0x9C, 0x9C, 0xBF, 0x53, 0xA4, 0xA4, 0xF7, 0xE4, 0x72, 0x72, 0x96,
	        0x9B, 0xC0, 0xC0, 0x5B, 0x75, 0xB7, 0xB7, 0xC2, 0xE1, 0xFD, 0xFD, 0x1C,
	        0x3D, 0x93, 0x93, 0xAE, 0x4C, 0x26, 0x26, 0x6A, 0x6C, 0x36, 0x36, 0x5A,
	        0x7E, 0x3F, 0x3F, 0x41, 0xF5, 0xF7, 0xF7, 0x02, 0x83, 0xCC, 0xCC, 0x4F,
	        0x68, 0x34, 0x34, 0x5C, 0x51, 0xA5, 0xA5, 0xF4, 0xD1, 0xE5, 0xE5, 0x34,
	        0xF9, 0xF1, 0xF1, 0x08, 0xE2, 0x71, 0x71, 0x93, 0xAB, 0xD8, 0xD8, 0x73,
	        0x62, 0x31, 0x31, 0x53, 0x2A, 0x15, 0x15, 0x3F, 0x08, 0x04, 0x04, 0x0C,
	        0x95, 0xC7, 0xC7, 0x52, 0x46, 0x23, 0x23, 0x65, 0x9D, 0xC3, 0xC3, 0x5E,
	        0x30, 0x18, 0x18, 0x28, 0x37, 0x96, 0x96, 0xA1, 0x0A, 0x05, 0x05, 0x0F,
	        0x2F, 0x9A, 0x9A, 0xB5, 0x0E, 0x07, 0x07, 0x09, 0x24, 0x12, 0x12, 0x36,
	        0x1B, 0x80, 0x80, 0x9B, 0xDF, 0xE2, 0xE2, 0x3D, 0xCD, 0xEB, 0xEB, 0x26,
	        0x4E, 0x27, 0x27, 0x69, 0x7F, 0xB2, 0xB2, 0xCD, 0xEA, 0x75, 0x75, 0x9F,
	        0x12, 0x09, 0x09, 0x1B, 0x1D, 0x83, 0x83, 0x9E, 0x58, 0x2C, 0x2C, 0x74,
	        0x34, 0x1A, 0x1A, 0x2E, 0x36, 0x1B, 0x1B, 0x2D, 0xDC, 0x6E, 0x6E, 0xB2,
	        0xB4, 0x5A, 0x5A, 0xEE, 0x5B, 0xA0, 0xA0, 0xFB, 0xA4, 0x52, 0x52, 0xF6,
	        0x76, 0x3B, 0x3B, 0x4D, 0xB7, 0xD6, 0xD6, 0x61, 0x7D, 0xB3, 0xB3, 0xCE,
	        0x52, 0x29, 0x29, 0x7B, 0xDD, 0xE3, 0xE3, 0x3E, 0x5E, 0x2F, 0x2F, 0x71,
	        0x13, 0x84, 0x84, 0x97, 0xA6, 0x53, 0x53, 0xF5, 0xB9, 0xD1, 0xD1, 0x68,
	        0x00, 0x00, 0x00, 0x00, 0xC1, 0xED, 0xED, 0x2C, 0x40, 0x20, 0x20, 0x60,
	        0xE3, 0xFC, 0xFC, 0x1F, 0x79, 0xB1, 0xB1, 0xC8, 0xB6, 0x5B, 0x5B, 0xED,
	        0xD4, 0x6A, 0x6A, 0xBE, 0x8D, 0xCB, 0xCB, 0x46, 0x67, 0xBE, 0xBE, 0xD9,
	        0x72, 0x39, 0x39, 0x4B, 0x94, 0x4A, 0x4A, 0xDE, 0x98, 0x4C, 0x4C, 0xD4,
	        0xB0, 0x58, 0x58, 0xE8, 0x85, 0xCF, 0xCF, 0x4A, 0xBB, 0xD0, 0xD0, 0x6B,
	        0xC5, 0xEF, 0xEF, 0x2A, 0x4F, 0xAA, 0xAA, 0xE5, 0xED, 0xFB, 0xFB, 0x16,
	        0x86, 0x43, 0x43, 0xC5, 0x9A, 0x4D, 0x4D, 0xD7, 0x66, 0x33, 0x33, 0x55,
	        0x11, 0x85, 0x85, 0x94, 0x8A, 0x45, 0x45, 0xCF, 0xE9, 0xF9, 0xF9, 0x10,
	        0x04, 0x02, 0x02, 0x06, 0xFE, 0x7F, 0x7F, 0x81, 0xA0, 0x50, 0x50, 0xF0,
	        0x78, 0x3C, 0x3C, 0x44, 0x25, 0x9F, 0x9F, 0xBA, 0x4B, 0xA8, 0xA8, 0xE3,
	        0xA2, 0x51, 0x51, 0xF3, 0x5D, 0xA3, 0xA3, 0xFE, 0x80, 0x40, 0x40, 0xC0,
	        0x05, 0x8F, 0x8F, 0x8A, 0x3F, 0x92, 0x92, 0xAD, 0x21, 0x9D, 0x9D, 0xBC,
	        0x70, 0x38, 0x38, 0x48, 0xF1, 0xF5, 0xF5, 0x04, 0x63, 0xBC, 0xBC, 0xDF,
	        0x77, 0xB6, 0xB6, 0xC1, 0xAF, 0xDA, 0xDA, 0x75, 0x42, 0x21, 0x21, 0x63,
	        0x20, 0x10, 0x10, 0x30, 0xE5, 0xFF, 0xFF, 0x1A, 0xFD, 0xF3, 0xF3, 0x0E,
	        0xBF, 0xD2, 0xD2, 0x6D
        };

        internal static byte[] DATA6 = {
	        0x01, 0x00, 0x00, 0x00, 0x47, 0x2D, 0x18, 0x3D, 0x79, 0x11, 0x10, 0x72,
	        0x7E, 0x1E, 0x51, 0x6E, 0x75, 0x0A, 0x12, 0x63, 0x4B, 0x1F, 0x61, 0x6B,
	        0x1D, 0x55, 0x0F, 0x14, 0x48, 0x4B, 0x6F, 0x67, 0x74, 0x04, 0x5D, 0x51,
	        0xB4, 0x61, 0xC9, 0xAF, 0xCD, 0x70, 0xD9, 0xDD, 0xB3, 0x6E, 0x88, 0xB3,
	        0xC6, 0x64, 0x9A, 0xD0, 0xFF, 0x5C, 0xD9, 0x1B, 0xE2, 0x09, 0xD6, 0x0F,
	        0xAA, 0x42, 0xB9, 0x68, 0xDE, 0x46, 0xE4, 0x39, 0xEC, 0x08, 0xDB, 0xB2,
	        0x21, 0x78, 0x02, 0x6F, 0x92, 0x16, 0x8A, 0xDC, 0x54, 0x72, 0x10, 0x0C,
	        0xDF, 0x1C, 0x13, 0xE5, 0x3D, 0x15, 0xC5, 0xEA, 0x97, 0x57, 0x7C, 0x82,
	        0x49, 0x11, 0x98, 0xBB, 0x6A, 0x4E, 0x31, 0x89, 0x4B, 0x36, 0x33, 0xE6,
	        0xD9, 0x20, 0xB9, 0x3A, 0x8D, 0x52, 0xA9, 0x36, 0x82, 0x1C, 0xC0, 0xE0,
	        0xBF, 0x09, 0x05, 0x0A, 0x28, 0x5E, 0x79, 0x88, 0x61, 0x4F, 0xE1, 0x33,
	        0xE6, 0xB6, 0xF2, 0x66, 0xAD, 0x80, 0xC1, 0x80, 0x74, 0xA0, 0x78, 0xBA,
	        0xF9, 0xF2, 0xD1, 0x8C, 0x1B, 0x95, 0xFE, 0x84, 0xA4, 0x9C, 0xFB, 0x8E,
	        0x8C, 0xC2, 0x82, 0x06, 0xED, 0x8D, 0x63, 0x35, 0xAB, 0x4D, 0x64, 0x33,
	        0x06, 0xCD, 0xA5, 0xB3, 0x72, 0x6D, 0xDD, 0x09, 0x8B, 0x9F, 0x0C, 0x85,
	        0x26, 0x4E, 0x00, 0x13, 0x82, 0xD2, 0xFB, 0x9D, 0x0E, 0x10, 0x79, 0x9B,
	        0xE3, 0x9D, 0x1A, 0xAE, 0xD5, 0xEF, 0x80, 0x22, 0xD3, 0x22, 0x25, 0x91,
	        0xA1, 0x4F, 0xF8, 0x98, 0x2A, 0xD0, 0xF4, 0x1D, 0xC3, 0x3E, 0xBF, 0xB7,
	        0x41, 0xEC, 0x44, 0x2A, 0x4F, 0xFC, 0x3D, 0xB1, 0xAC, 0x61, 0x27, 0x1F,
	        0x7A, 0x23, 0x40, 0xB3, 0xA9, 0x01, 0x65, 0x22, 0x08, 0x4E, 0x9D, 0xBA,
	        0x22, 0x9E, 0x69, 0xA7, 0x50, 0x35, 0x46, 0xEB, 0x11, 0xD9, 0x02, 0xC1,
	        0x5E, 0x25, 0x3F, 0x70, 0xF2, 0x44, 0x18, 0x6F, 0xE1, 0x8E, 0xE8, 0x3A,
	        0x48, 0x8F, 0x8D, 0x18, 0x40, 0xC1, 0x10, 0xA2, 0x62, 0x5F, 0x79, 0x05,
	        0xFA, 0xFA, 0xF0, 0x80, 0xEB, 0x23, 0xF2, 0x41, 0xB5, 0x06, 0xCD, 0x31,
	        0x47, 0x42, 0xD5, 0x5E, 0xD6, 0x8D, 0xB0, 0x9A, 0x9E, 0x02, 0x3D, 0x82,
	        0xDE, 0xC3, 0x2D, 0x20, 0xBC, 0x9C, 0x54, 0x25, 0x9F, 0x24, 0xD0, 0xBF,
	        0x74, 0x07, 0x22, 0xFE, 0xC1, 0x01, 0xEF, 0xCF, 0x86, 0x43, 0x3A, 0x91,
	        0xFA, 0x0D, 0x31, 0xDE, 0x64, 0x0F, 0x0C, 0x5C, 0xBA, 0xCC, 0x21, 0x7C,
	        0x06, 0x50, 0x75, 0x59, 0xF0, 0x77, 0x4D, 0x74, 0x84, 0x70, 0x6F, 0x8A,
	        0x45, 0x71, 0x80, 0x45, 0xC3, 0x32, 0xBA, 0xD4, 0xB5, 0xF9, 0x79, 0xF0,
	        0xD1, 0xF6, 0x75, 0xAC, 0x6B, 0x3A, 0x54, 0xD0, 0x6D, 0x6A, 0x21, 0x89,
	        0xCC, 0x75, 0xB0, 0xD3, 0x48, 0x05, 0xDF, 0x59, 0x0D, 0x74, 0x5F, 0x1C,
	        0xCE, 0x46, 0xE5, 0xC8, 0x37, 0x20, 0x91, 0x7B, 0xE6, 0xD6, 0xE4, 0xD7,
	        0x8D, 0xEC, 0xB0, 0x07, 0xE0, 0x86, 0x91, 0x8E, 0x2D, 0x31, 0x31, 0xCA,
	        0x65, 0x34, 0xEE, 0x93, 0x68, 0x40, 0xB1, 0x8F, 0xA6, 0x06, 0x54, 0x47,
	        0xF3, 0x00, 0x31, 0x5F, 0x15, 0xD6, 0xD5, 0x88, 0x98, 0x3A, 0x65, 0x8F,
	        0x78, 0xBC, 0xF4, 0x01, 0x91, 0x54, 0x8E, 0xB6, 0xF4, 0x60, 0x60, 0x25,
	        0x9C, 0x20, 0xD1, 0xAA, 0x3A, 0x26, 0x85, 0xED, 0x49, 0x97, 0x64, 0xDF,
	        0x5C, 0x41, 0xB1, 0x57, 0xC4, 0x7B, 0xD4, 0xD8, 0xBC, 0xC7, 0x20, 0xD9,
	        0xF4, 0x92, 0x39, 0x83, 0x00, 0xF2, 0x59, 0xA6, 0x9C, 0xD2, 0x88, 0x0C,
	        0xA6, 0xF4, 0x0D, 0xE1, 0x49, 0x97, 0x64, 0xDF, 0x5C, 0x41, 0xB1, 0x57,
	        0xC4, 0x7B, 0xD4, 0xD8, 0xBC, 0xC7, 0x20, 0xD9, 0xF4, 0x92, 0x39, 0x83,
	        0x00, 0xF2, 0x59, 0xA6, 0x9C, 0xD2, 0x88, 0x0C, 0xA6, 0xF4, 0x0D, 0xE1,
	        0x32, 0x1C, 0xD1, 0x62, 0xA7, 0xB1, 0x40, 0xC8, 0x20, 0x58, 0x4D, 0x7D,
	        0x4F, 0x4C, 0xA1, 0x93, 0x28, 0x0A, 0xD6, 0x09, 0xA2, 0x6C, 0x8F, 0x90,
	        0x75, 0x62, 0xAD, 0x7D, 0x31, 0x83, 0x66, 0xA0, 0xE3, 0x7A, 0xA4, 0xC0,
	        0x95, 0xAD, 0x91, 0xAA, 0x87, 0xE9, 0x0D, 0xB5, 0x6F, 0x14, 0xEC, 0xEE,
	        0xFB, 0x6E, 0x32, 0x40, 0x8A, 0x66, 0x59, 0x99, 0xD7, 0x0E, 0x22, 0xED,
	        0x44, 0xE1, 0xCB, 0xDD, 0x87, 0x71, 0xDA, 0xE9, 0x76, 0xD7, 0x35, 0x6A,
	        0x12, 0x44, 0x9C, 0x1F, 0xE8, 0xFD, 0xE1, 0x5B, 0x1E, 0x1A, 0xCD, 0x13,
	        0x71, 0x08, 0x6B, 0xD9, 0x5D, 0x68, 0x7B, 0x74, 0x93, 0xEF, 0xE9, 0x30,
	        0xD6, 0xCC, 0x2D, 0x2F, 0xF1, 0xA6, 0xEF, 0x83, 0x64, 0x93, 0xA9, 0x75,
	        0xFA, 0xB9, 0x7D, 0x44, 0x1E, 0x36, 0xC4, 0x52, 0x6F, 0x12, 0xA6, 0xCA,
	        0x2C, 0x60, 0x10, 0xAD, 0xCE, 0x87, 0x92, 0x44, 0x37, 0x7F, 0xB3, 0x8A,
	        0x27, 0x6A, 0xC2, 0xAC, 0x95, 0x35, 0x46, 0xF6, 0x9E, 0x2A, 0xD4, 0x31,
	        0xFB, 0xA3, 0x07, 0x8B, 0x71, 0x24, 0x62, 0x98, 0x43, 0x72, 0xB6, 0x67,
	        0xE2, 0xE7, 0x82, 0xE9, 0x39, 0x86, 0x51, 0x53, 0x10, 0x15, 0x71, 0x26,
	        0xB2, 0x5F, 0x84, 0x5A, 0x0B, 0x1F, 0x92, 0xC7, 0x0F, 0xC0, 0xE5, 0x5A,
	        0x8A, 0x87, 0x65, 0x13, 0x32, 0x56, 0xD4, 0xFF, 0xA1, 0x95, 0x34, 0x8E,
	        0xAD, 0x1E, 0xD8, 0xC1, 0x29, 0x93, 0x20, 0x75, 0xA2, 0x4A, 0xF5, 0x7C,
	        0xB9, 0x40, 0x16, 0x9D, 0x10, 0x54, 0x8D, 0x01, 0x85, 0x47, 0x80, 0x49,
	        0xB8, 0xD1, 0xB1, 0xEC, 0x93, 0xC3, 0xE0, 0x71, 0xDA, 0x1C, 0xA4, 0xFA,
	        0x84, 0x8D, 0xF8, 0xB4, 0x8B, 0xD9, 0xD5, 0x09, 0x1B, 0x0A, 0xE3, 0xE1,
	        0xD5, 0x29, 0x58, 0x51, 0x95, 0x13, 0x0D, 0x48, 0x3D, 0x96, 0x31, 0xA5,
	        0x2B, 0x12, 0x51, 0x9D, 0x23, 0xB2, 0x95, 0xB5, 0x5E, 0x91, 0x5C, 0x4E,
	        0x0F, 0x54, 0x2D, 0xBD, 0x90, 0xD3, 0x36, 0xE8, 0xE0, 0x33, 0x30, 0x98,
	        0x40, 0x3A, 0x55, 0x19, 0xA8, 0x85, 0x3C, 0xED, 0x16, 0x84, 0x60, 0x38,
	        0xA8, 0xED, 0x2F, 0xAE, 0x7D, 0x23, 0xC9, 0xFB, 0x51, 0xC5, 0x71, 0xF3,
	        0x9F, 0x87, 0x1B, 0x55, 0xB0, 0x12, 0xA6, 0xF0, 0xA0, 0x09, 0x65, 0x81,
	        0xE8, 0xBF, 0x69, 0xF4, 0xBE, 0x01, 0x5C, 0xD5, 0x45, 0x91, 0x3D, 0x75,
	        0xD5, 0xCE, 0xE6, 0x55, 0x2C, 0xE6, 0xB8, 0x08, 0xCE, 0x42, 0x6A, 0xA6,
	        0x8F, 0x5B, 0xAA, 0xC0, 0x10, 0x1B, 0xC3, 0x71, 0x48, 0xB6, 0x0C, 0x75,
	        0x56, 0xBE, 0x35, 0x21, 0x6A, 0xE2, 0x5C, 0x59, 0x90, 0x5F, 0xDB, 0x20,
	        0xF9, 0x28, 0x5E, 0x5D, 0xE2, 0xA4, 0xD2, 0xAE, 0xD9, 0x4D, 0x7F, 0xDE,
	        0x9F, 0x40, 0x69, 0xB1, 0x58, 0xAD, 0xCF, 0x04, 0x1E, 0x08, 0x39, 0x54,
	        0xB6, 0x63, 0xB6, 0xD0, 0xFA, 0xBD, 0x87, 0x79, 0x69, 0x77, 0x85, 0x7D,
	        0x1B, 0x8C, 0x8C, 0xF3, 0x7E, 0x0E, 0x9A, 0x8B, 0x46, 0x0D, 0x16, 0x6F,
	        0xC7, 0xED, 0xA6, 0xB5, 0x46, 0xA5, 0xF6, 0x50, 0x47, 0x2D, 0x18, 0x3D,
	        0x79, 0x11, 0x10, 0x72, 0x7E, 0x1E, 0x51, 0x6E, 0x75, 0x0A, 0x12, 0x63,
	        0x4B, 0x1F, 0x61, 0x6B, 0x1D, 0x55, 0x0F, 0x14, 0x48, 0x4B, 0x6F, 0x67,
	        0x74, 0x04, 0x5D, 0x51
        };
    }
}
